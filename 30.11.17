
///ToWord!
#include<iostream>
using namespace std;

int ostrlen(char *a)
{
	int len = 0;
	while(a[len])
	{
		len++;
	}
	return (len+1);
}


int main()
{
	int teilAnz = 0;//skolko slagaemich w chisle
	int zahl = 0;
	
    char *words[] = {"null", "ein", "zwei", "drei", "vier", "fuenf", "sechs", "sieben", "acht", "neun"};
 


	char null[]="null";
	char eins[]="ein"; // do 9 dobavit 's'
	char zwei[]="zwei";
	char drei[]="drei";
	char vier[]="vier";
	char fuenf[]="fuenf";
	char sechs[]="sechs";
	char sieben[]="sieben";
	char acht[]="acht";
	char neun[]="neun";
	int arr[100];
	char gem[99];
	//gem[1] = eins;




	int x = 0;


	cout << "Gieb mier Zahl ein: " << endl;
	cin >> arr[0];
	cout << words[zahl] << endl;

	char x[99] = {(char)(arr[0])};
	cout << x << endl;
	//for(int i = 0; i < ostrlen(x))



	//switch (x)
	//{
	//case 1: cout << eins << endl;
	//
	//}




	//for(; teilAnz > 0; teilAnz--)
	//{
	//cout << zahl;
	//}

}









//////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////

#include<iostream>
#include<cstring>
using namespace std;

int ostrlen(char *a)
{
	int len = 0;
	while(a[len])
	{
		len++;
	}
	return (len+1);
}

int ostrlen2(char *a)
{
	int len = 1;
	while(a[len])
	{
		len++;
	}
	return (len);
}

void ostrcpy(char *a, char *b)
{
	for(int i = 0; i < ostrlen(b); i++)
	{
		a[i]=b[i];
	}
}

int upstring(char *str)
{
	int toUp = 0;
	for(int i = 0; i < ostrlen(str); i++)
	{
		if(((int)(str[i]) > 96)&&((int)(str[i]) < 123))
		{
			str[i] = ((int)(str[i]))-32;
			toUp++;
		}
	}
	return(toUp);
}

void reversstring(char *string)
{
	int strlen = ostrlen(string)-2;

	for(int i = (strlen/2); i >= 0; i--)
	{
		char tmp = string[strlen - i];
		string[strlen - i] = string[i];
		string[i]=tmp;
	}
}

void mixstring(char *ziel, char *strA, char *strB)
{
	int strLenA = ostrlen(strA)-2;
	int strLenB = ostrlen(strB)-2;
	int a = 0;
	int b = 0;
	int x = 0;

	for(int i = 1; i < ostrlen(ziel); i++)
	{
		if( ((i%2)==0) && ((strLenB + 1)>0) )
		{
			ziel[x] = strB[b];
			b++;
			x++;
			strLenB--;
		}


		else if( ((i%2)!=0) && ((strLenA + 1)>0) )
		{
			ziel[x] = strA[a];
			a++;
			x++;
			strLenA--;			
		}
	}
	ziel[a+b] = '\0';
}

void mixstring3(char *ziel, char *strA, char *strB)
{
	int a = 0;
	int b = 0;
	int x = 0;
	int i = 1;

	while(strA[a]||strB[b])
	{
		if( ((i%2)==0) && strB[b] )
		{
			ziel[x] = strB[b];
			b++;
			x++;
		}


		else if( ((i%2)!=0) && strA[b] )
		{
			ziel[x] = strA[a];
			a++;
			x++;
		}
		i++;
	}
	ziel[a+b] = '\0';
}

int ostrstr(char *strA, char *strB)
{
	int a = (ostrlen(strA)-2);
	int b = (ostrlen(strB)-2);
	int counter = 0;
	int i = 0;

	while((counter != a)&&(i != b))
	{
		if(strA[counter] == strB[i])
		{
			counter = counter + 1;
		}
		else
		{
			counter = 0;
		}
		i = i + 1;
	}
	int adr = i - a;
	switch (counter)
	{
	case 0: return -1;
		break;
	default: return(adr);
	}
}

void leftstr(char *ziel, char *quelle, int anz)
{
	int qLen = ostrlen(quelle)-1;
	int zLen = ostrlen(ziel);
	int ende = 0;
	if((anz < zLen)&&(anz < qLen))
	{
		ende = anz;
	}
	else
	{
		if(qLen < zLen)
		{
			ende = qLen;
		}
		else
		{
			ende = zLen-1;
		}
	}

	for(int i = 0; i < ende; i++)
	{
		ziel[i] = quelle[i];
	}
	ziel[ende] = '\0';
}

void rightstr(char *ziel, char *quelle, int anz)
{
	int qLen = ostrlen(quelle)-1;
	int zLen = ostrlen(ziel);
	int start = qLen - anz;
	int i = 0;
	if(anz < qLen)
	{
		if(qLen<zLen)
		{
			start = qLen - anz;
		}
	}
	else
	{
		if(qLen<zLen)
		{
			if(anz>qLen)
			{
				start = 0;
			}
			else
			{
				start = zLen - qLen;
			}
		}
	}
	for(; start < qLen; start++, i++)
	{
		ziel[i]=quelle[start];
	}
	ziel[i]='\0';
}

void midstr(char *ziel, char *quelle, int index)
{
	
}

int main()
{
	//RIGHTSTR

	char quelle[111] = "01234";
	char ziel[10];
	ziel[9] = '\0';
	
	int anz = 10;
	rightstr(ziel, quelle, anz);
	cout << ziel << endl;



	////LEFTSTR
	//char quelle[111] = "12345678";
	//char ziel[7];
	//ziel[6] = '\0';
	//
	//int anz = 17;
	//leftstr(ziel, quelle, anz);
	//cout << ziel << endl;


	/////////
	//char mixArr[32];
	//char arrA[10] = "Otto";
	//char arrB[32] = "Und Otto ging baden";
	//



	//cout << ostrlen(arrA) << endl;

	////cout << "arrA: " << arrA << endl;
	////cout << "arrB: " << arrB << endl;
	////
	////ostrcpy(arrA, arrB);

	////cout << "arrA: " << arrA << endl;
	////
	////int anzToUp = upstring(arrB);

	////cout << "arrB: " << arrB << " " << anzToUp << endl;

	////reversstring(arrA);
	////cout << arrA << endl;

	//mixstring(mixArr, arrA, arrB);

	//cout << mixArr << endl;


	//int erg = ostrstr(suche, afrika);
	////ostrstr(arrA, arrB);
	//cout << erg << endl;





	////OSTRSTR
	//char suche[]="Art";
	//char afrika[]="Seit immer mehr Migranten aus Afrika über das Mittelmeer kommen, sucht die EU nach neuen Strategien. Dazu gehört eine neue Art von Partnerschaft. Der Kontinent steht im Zentrum der politischen Aufmerksamkeit.";
	//int erg2 = ostrstr(suche, afrika);
	//cout << erg2 << endl;







}
